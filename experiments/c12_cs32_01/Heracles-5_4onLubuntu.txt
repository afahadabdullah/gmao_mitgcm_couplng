# Instructions for running GEOS-5 (Heracles-5_4) coupled to MITgcm on Lubuntu 16.04
# https://github.com/christophernhill/gmao_mitgcm_couplng/blob/master/experiments/c12_cs32_01/Heracles-5_4onLubuntu.txt

# Set up a Lubuntu 16.04 virtual machine under VirtualBox
#   Get VirtualBox from https://www.virtualbox.org/wiki/Downloads
#   Get lubuntu-16.04.2-desktop-amd64.iso from https://help.ubuntu.com/community/Lubuntu/GetLubuntu
#   Start VirtualBox and set-up virtual machine
#     New
#       Name: lubuntu-16.04
#       Type: Linux
#       Version: Ubuntu (64-bit)
#       Memory size: 2048 MB
#       Create a virtual hard disk now
#       Hard disk file type: VDI (VirtualBox Disk Image)
#       Storage on physical hard disk: Fixed size
#       File location and size: 20.00 GB
#     Settings
#       General
#         Advanced
#           Shared Clipboard: Bidirectional
#           Drag'n'Drop: Bidirectional
#       System/Processor
#         Processors: 4 CPUs
#         Execution Cap: 100%
#         Extended Features: V Enable PAE/NX
#       Storage
#         Controller: IDE (click on circle with green plus)
#         Choose disk: Downloads/lubuntu-16.04.2-desktop-amd64.iso
#       Shared Folders (click on folder with green plus)
#         Folder Path: Other, Open (to point to home directory on Mac)
#         V Auto-mount
#     Start

# Install Lubuntu
#   Download Updates; Install third-party software
#   Erase disk and install Lubuntu
#   Your name: heracles
#   Your computer's name: heracles
#   Password: heracles
#   Log in automatically

# Packages needed for VirtualBox to run smoothly
sudo apt install virtualbox-guest-dkms
sudo adduser heracles vboxsf
sudo reboot

# Extra packages needed to get and run MITgcm
sudo apt install cvs
sudo apt install gfortran
sudo apt install libopenmpi-dev   # needed for parallel run of MITgcm

# Extra packages needed to build GEOS-5 baselibs
sudo apt install g++
sudo apt-get install bison
sudo apt-get install flex
sudo apt-get install libexpat1-dev

# Extra packages needed to get and run GEOS-5
sudo apt install git
sudo apt install tcsh
sudo apt install colordiff
sudo apt-get install libblas-dev
sudo apt-get install liblapack-dev
sudo apt-get install python-dev
sudo apt-get install python-numpy
sudo ln -s /usr/bin/make /usr/bin/gmake

# Start tcsh and set $WorkingDir
tcsh
setenv WorkingDir ~/geos5
mkdir $WorkingDir

# Link or build GEOS-5 baselibs in $WorkingDir
#   GMAO-Baselibs-4_0_7.withNewCDO.tgz is available in
#   engaging:/nobackup1/dmenemen/geos5/tarballs_100816
#   discover:/discover/nobackup/dmenemen/geos5/tarballs_100816
# Note that if Baselibs is moved to a different location, it needs
# to be rebuilt (or linked to old location). This is because
# netCDF libraries and LD paths are provided by
# "nf_config --flibs" based on netCDF installation directory. 
cd $WorkingDir
tar xf GMAO-Baselibs-4_0_7.withNewCDO.tgz
cd GMAO-Baselibs-4_0_7/src
make -j 8 install ESMF_COMM=openmpi |& tee makeinstall.log

# Get GEOS-5
# For instructions below to work, you need to:
# (1) have an account on engaging,
# (2) have correct id_rsa key in ~/.ssh, and
# (3) replace "dmenemen" with your engaging username.
cd $WorkingDir
git clone dmenemen@eofe4.mit.edu:/pool001/cnh/geos5mit_write/GEOSodas.git
cd GEOSodas
git checkout b_geos5mit

# Get GEOS-5 to MITgcm coupling code
# For instructions below to work, you need to:
# (1) have a github account
# (2) have been granted access to
#     https://github.com/christophernhill/gmao_mitgcm_couplng
# (3) have added ssh key to your github account
#     https://help.github.com/articles/generating-an-ssh-key
cd $WorkingDir/GEOSodas/src/GEOSgcs_GridComp/GEOSgcm_GridComp
cd GEOSogcm_GridComp/GEOSocean_GridComp/GuestOcean_GridComp
git clone git@github.com:christophernhill/gmao_mitgcm_couplng

# Get MITgcm from anonymous CVS server
cd $WorkingDir
setenv CVSROOT :pserver:cvsanon@mitgcm.org:/u/gcmpack
cvs login                         # enter the CVS password: "cvsanon"
cvs -q co MITgcm_code
cvs -q co MITgcm/verification/testreport
cvs -q co MITgcm/verification/tutorial_held_suarez_cs
cvs -q co MITgcm/verification/global_ocean.cs32x15

# Set GEOS-5 and MITgcm environment variables
 cd $WorkingDir/GEOSodas/src
 source g5_modules
 setenv ESMA_NOCVS
 setenv MITGCM_ROOT $WorkingDir/MITgcm
 setenv GMAO_MITGCM_COUPLNG $WorkingDir/GEOSodas/src/GEOSgcs_GridComp/GEOSgcm_GridComp/GEOSogcm_GridComp/GEOSocean_GridComp/GuestOcean_GridComp/gmao_mitgcm_couplng

# Generate original MITgcm Makefile and provide set of MITgcm src code for this set-up
# Note: for testing purpose, genmake2 is used with "-ieee" option to disable any compiler optimisation
#       but for real application, "-ieee" should be dropped to speed up ocean run.
 cd $GMAO_MITGCM_COUPLNG/experiments/c12_cs32_01
 mkdir build ; cd build; \rm *
 setenv ROOTDIR $WorkingDir/MITgcm
 setenv MPI_INC_DIR /usr/include/mpi
 $ROOTDIR/tools/genmake2 -mods ../code -mpi -ieee
 make depend

#- Generate modified src code and Makefile for MITgcm
 cd $GMAO_MITGCM_COUPLNG/mitgcm_setup/inc
 ./mk_local ../../experiments/c12_cs32_01/build
 cd $GMAO_MITGCM_COUPLNG/mitgcm_setup/build
 ./mk_local ../../experiments/c12_cs32_01/build
 cd $GMAO_MITGCM_COUPLNG/mitgcm_setup
 \rm code input
 ln -s ../experiments/c12_cs32_01/code .
 ln -s ../experiments/c12_cs32_01/input .
 cd build
 \rm *.a *.c *.f *.h *.o *.F

# Build coupled GEOS-5 + MITgcm.
# Approximately 8 minutes with "-j 16".
# If the build is successful, it will create:
# $WorkingDir/GEOSodas/src/Applications/GEOSgcm_App/GEOSgcm.x
 cd $WorkingDir/GEOSodas/src
 gmake pinstall -j 16 |& tee makeinstall.log

# Set up coupled code for experiments/c12_cs32_01
# Be sure to replace "Desired Location" and "Build"
# directories below with your own
 cd $WorkingDir/GEOSodas/src/Applications/GEOSgcm_App
 ./gcm_setup
# Enter the Experiment ID: TEST
# Enter a 1-line Experiment Description: TEST
# Do you wish to CLONE an old experiment? NO
# Enter the Atmospheric Horizontal Resolution code: c12
# Enter the Atmospheric Model Vertical Resolution: 72
# Do you wish to run the COUPLED Ocean/Sea-Ice Model? YES
# Enter the Ocean Lat/Lon Horizontal Resolution: cs32
# Enter the Ocean Model Vertical Resolution: 15
# Enter the choice of  Land Surface Model: 1
# Do you wish to run  the Runoff Routing Model? NO
# Do you wish to run GOCART with Actual or Climatological Aerosols? C
# Enter the tag or directory: Current
# Enter Desired Location for HOME: /home/heracles/geos5/TEST
# Enter Desired Location for EXPERIMENT: /home/heracles/geos5/TEST
# Enter Location for Build directory: /home/heracles/geos5/GEOSodas
# Enter your GROUP ID for Current EXP: heracles

# Get GEOS-5 boundary conditions geos5-tiny.tgz
#   from engaging:/nobackup1/dmenemen/geos5/tarballs_100816
#   or discover:/discover/nobackup/dmenemen/geos5/tarballs_100816
 cd $WorkingDir
 tar -xf geos5-tiny.tgz
 find TinyFromMatt -type d | xargs chmod g+rxs
 find TinyFromMatt -type f | xargs chmod g+r
 cd $WorkingDir/TEST
$GMAO_MITGCM_COUPLNG/experiments/c12_cs32_01/makeoneday.bash TINY
cp $GMAO_MITGCM_COUPLNG/experiments/c12_cs32_01/*.rc .

# Populate the input_mit directory
cd $WorkingDir/TEST
mkdir input_mit
cd input_mit
ln -sf $MITGCM_ROOT/verification/global_ocean.cs32x15/input/bathy_Hmin50.bin .
ln -sf $MITGCM_ROOT/verification/tutorial_held_suarez_cs/input/g* .
ln -sf $MITGCM_ROOT/verification/global_ocean.cs32x15/input/pic* .
ln -sf $GMAO_MITGCM_COUPLNG/mitgcm_setup/input/* .

# Run coupled code
# Some verification output in $GMAO_MITGCM_COUPLNG/experiments/c12_cs32_01/verification
cd $WorkingDir/TEST
setenv GFORTRAN_CONVERT_UNIT 'little_endian:20-25'
./gcm_run.j |&  tee gcm_run.out
